#!/bin/bash

source $OPENSHIFT_CARTRIDGE_SDK_BASH
export PIDFILE=${OPENSHIFT_ORS_RUN_DIR}/ors.pid

function isrunning() {
  if [ -f $PIDFILE ]; then
    local pid=$(cat $PIDFILE 2> /dev/null)
    uid=$(id -u)
    if `ps --pid $pid -u $uid 2>&1 | grep $pid > /dev/null 2>&1`; then
      return 0
    fi
  fi
  return 1
}

# Kill the process given by $1 and its children
killtree() {
  local _pid=$1
  for _child in $(ps -o pid --no-headers --ppid ${_pid}); do
    killtree ${_child}
  done

  local should_be_gone_pid=$(ps -o pid -p ${_pid} --no-headers)
  if [ -z "$should_be_gone_pid" ]; then
    return
  else
    kill -TERM ${_pid}
  fi

  local count=0
  while [ ${count} -lt 15 ]; do
    local should_be_gone_pid=$(ps -o pid -p ${_pid} --no-headers)
    if [ -z "$should_be_gone_pid" ]; then
      return
    else
      sleep 2
      let count=${count}+1
    fi
  done

  local should_be_gone_pid=$(ps -o pid -p ${_pid} --no-headers)
  if [ ! -z $should_be_gone_pid ]; then
    kill -9 ${_pid}
  fi
}
